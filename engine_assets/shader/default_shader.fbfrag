@define
pi = 3.14159

@uniform
uv: vec2

@input
vert: vec2

@output
vertex: vec2

@output
albedo: vec4

@uniform
Albedo_useTexture: bool
@uniform
Albedo_Texture: sampler2D
@uniform
Albedo_Color: vec4

struct structTest:
    low matrix: mat2

def test(test1: int, test2: structTest, test3: float) -> int:
    t: int = 2
    t = 1
    return test1 + t
    
def main():
    st: structTest = structTest(mat2(vec2(vert), vec2(vert)))
    
    vertex = vec2(1.0, 1.0) * vec2(test(1, st, 1.0), 1.0)
    albedo = texture(ALBEDO, uv)
    # injector will turn "texture(ALBEDO, uv)" into:
    albedo = texture(Albedo_Texture, uv) if Albedo_useTexture else Albedo_Color 
    